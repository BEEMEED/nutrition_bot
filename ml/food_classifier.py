import base64
from openai import OpenAI
from handlers.stats import text
from aiogram import Router,F
from aiogram.types import callback_query,CallbackQuery
import json
from datetime import datetime
from handlers.stats import vivod_stat
client = OpenAI(
    base_url="http://localhost:1234/v1",
    api_key="not-needed"
)

def encode_image(image_path):
    with open(image_path, "rb") as image_file:
        return base64.b64encode(image_file.read()).decode('utf-8')


def image_photo(name,user_id,weight,month):
    image_path = name
    base64_image = encode_image(image_path)
    response = client.chat.completions.create(
        model="qwen/qwen2.5-vl-7b",
        messages=[
            {
                "role": "user",
                "content": [
                    {"type": "text", "text": f'''–ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É–π —Ñ–æ—Ç–æ –∏ –æ–ø–∏—à–∏ –±–ª—é–¥–æ.  
                                                –û—Ü–µ–Ω–∏ –∫–∞–ª–æ—Ä–∏–∏ –∏ –ë–ñ–£ –Ω–∞ {weight} –≥—Ä–∞–º–º–∞—Ö,–µ—Å–ª–∏ –µ—Å–ª–∏ –≥—Ä–∞–º–º–æ–≤–∫–∞ —É–∫–∞–∑–∞–Ω–∞ –∫–∞–∫ 0 —Ç–æ 250–≥.  
                                                –û—Ç–≤–µ—Ç—å —Å—Ç—Ä–æ–≥–æ –ø–æ —à–∞–±–ª–æ–Ω—É:

                                                üçΩ –†–µ–∑—É–ª—å—Ç–∞—Ç –∞–Ω–∞–ª–∏–∑–∞
                                                [–ù–∞–∑–≤–∞–Ω–∏–µ –±–ª—é–¥–∞] ({weight} –≥)
                                                üî•[XXX] –∫–∫–∞–ª | –ë: [X.X] –≥ | –ñ: [X.X] –≥ | –£: [X.X] –≥

                                                üéØ –∏—Ç–æ–≥–æ:
                                                üî•[XXX] –∫–∫–∞–ª
                                                üí™–ë–µ–ª–∫–∏: [X.X] –≥
                                                üßà–ñ–∏—Ä—ã: [X.X] –≥
                                                üçû–£–≥–ª–µ–≤–æ–¥—ã: [X.X] –≥

                                                –ù–µ –¥–æ–±–∞–≤–ª—è–π –ø–æ—è—Å–Ω–µ–Ω–∏–π, –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤, –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π. –¢–æ–ª—å–∫–æ —à–∞–±–ª–æ–Ω.'''},
                    {
                        "type": "image_url",
                        "image_url": {
                            "url": f"data:image/jpeg;base64,{base64_image}"
                        }
                    }
                ]
            }
        ],
        max_tokens=512
    )
    text(message=response.choices[0].message.content,user_id=user_id)
    return response.choices[0].message.content

def image_etik(name,user_id,month):
    image_path = name
    base64_image = encode_image(image_path)
    response = client.chat.completions.create(
    model="Qwen2-VL-7B-Instruct",
    messages=[
            {
                "role": "user",
                "content": [
                    {"type": "text", "text": f'''–ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É–π —Ñ–æ—Ç–æ –∏ –æ–ø–∏—à–∏ –±–ª—é–¥–æ.  
                                                –û—Ü–µ–Ω–∏ –∫–∞–ª–æ—Ä–∏–∏ –∏ –ë–ñ–£ –Ω–∞ —Å—Ç–æ–ª—å–∫–æ —Ç–æ –≥—Ä–∞–º–º–∞—Ö,–µ—Å–ª–∏ –≥—Ä–∞–º–º–æ–≤–∫–∞ –Ω–µ —É–∫–∞–∑–∞–Ω–∞ –Ω–∞ —É–ø–∞–∫–æ–≤–∫–µ —Ç–æ 250–≥.  
                                                –û—Ç–≤–µ—Ç—å —Å—Ç—Ä–æ–≥–æ –ø–æ —à–∞–±–ª–æ–Ω—É:

                                                üçΩ –†–µ–∑—É–ª—å—Ç–∞—Ç –∞–Ω–∞–ª–∏–∑–∞
                                                [–ù–∞–∑–≤–∞–Ω–∏–µ –±–ª—é–¥–∞] (–≤–µ—Å –≥)
                                                üî•[XXX] –∫–∫–∞–ª | –ë: [X.X] –≥ | –ñ: [X.X] –≥ | –£: [X.X] –≥

                                                üéØ –∏—Ç–æ–≥–æ:
                                                üî•[XXX] –∫–∫–∞–ª
                                                üí™–ë–µ–ª–∫–∏: [X.X] –≥
                                                üßà–ñ–∏—Ä—ã: [X.X] –≥
                                                üçû–£–≥–ª–µ–≤–æ–¥—ã: [X.X] –≥

                                                –ù–µ –¥–æ–±–∞–≤–ª—è–π –ø–æ—è—Å–Ω–µ–Ω–∏–π, –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤, –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π. –¢–æ–ª—å–∫–æ —à–∞–±–ª–æ–Ω.'''},
                    {
                        "type": "image_url",
                        "image_url": {
                            "url": f"data:image/jpeg;base64,{base64_image}"
                        }
                    }
                ]
            }
        ],
        max_tokens=512
    )
    text(message=response.choices[0].message.content,user_id=user_id)
    return response.choices[0].message.content
router = Router()

    